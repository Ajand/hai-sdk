{
  "abi": [
    {
      "inputs": [],
      "name": "InvalidPriceFeed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "getResultWithValidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_result",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_validity",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "read",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getResultWithValidity()": "4fd0ada8",
    "read()": "57de26a4",
    "symbol()": "95d89b41"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidPriceFeed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"getResultWithValidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_result\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_validity\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"read\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getResultWithValidity()\":{\"details\":\"This method should never revert\"},\"read()\":{\"details\":\"Will revert if is the price feed is invalid\"}},\"title\":\"IBaseOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getResultWithValidity()\":{\"notice\":\"Fetch the latest oracle result and whether it is valid or not\"},\"read()\":{\"notice\":\"Fetch the latest oracle result\"},\"symbol()\":{\"notice\":\"Symbol of the quote: token / baseToken (e.g. 'ETH / USD')\"}},\"notice\":\"Basic interface for a system price feed         All price feeds should be translated into an 18 decimals format\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/oracles/IBaseOracle.sol\":\"IBaseOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@contracts/=src/contracts/\",\":@defi-wonderland/solidity-utils/=node_modules/@defi-wonderland/solidity-utils/solidity/\",\":@interfaces/=src/interfaces/\",\":@libraries/=src/libraries/\",\":@openzeppelin/=node_modules/@openzeppelin/contracts/\",\":@script/=src/script/\",\":@test/=src/test/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-auth/=lib/ds-token/lib/ds-stop/lib/ds-auth/src/\",\":ds-math/=lib/ds-token/lib/ds-math/src/\",\":ds-note/=lib/ds-token/lib/ds-stop/lib/ds-note/src/\",\":ds-stop/=lib/ds-token/lib/ds-stop/src/\",\":ds-test/=lib/ds-test/src/\",\":ds-token/=lib/ds-token/src/\",\":erc20/=lib/ds-token/lib/erc20/src/\",\":forge-std/=lib/forge-std/src/\",\":isolmate/=lib/isolmate/src/\",\":prb-test/=lib/prb-test/src/\"]},\"sources\":{\"src/interfaces/oracles/IBaseOracle.sol\":{\"keccak256\":\"0x4a2789a1a67321a889da96df45301657fef735850f77f3efeb5d2c8ef384a968\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cb955c6deb04a06055f6b26a5098e4405784d0a8fa46cbb70b48ed95a59de7f6\",\"dweb:/ipfs/QmSWH43Fez11igWdbdt4x43G8o17mA8AsuHy8kz3NFE9pn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPriceFeed"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getResultWithValidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_result",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_validity",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "read",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getResultWithValidity()": {
            "details": "This method should never revert"
          },
          "read()": {
            "details": "Will revert if is the price feed is invalid"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getResultWithValidity()": {
            "notice": "Fetch the latest oracle result and whether it is valid or not"
          },
          "read()": {
            "notice": "Fetch the latest oracle result"
          },
          "symbol()": {
            "notice": "Symbol of the quote: token / baseToken (e.g. 'ETH / USD')"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@contracts/=src/contracts/",
        ":@defi-wonderland/solidity-utils/=node_modules/@defi-wonderland/solidity-utils/solidity/",
        ":@interfaces/=src/interfaces/",
        ":@libraries/=src/libraries/",
        ":@openzeppelin/=node_modules/@openzeppelin/contracts/",
        ":@script/=src/script/",
        ":@test/=src/test/",
        ":@uniswap/=node_modules/@uniswap/",
        ":ds-auth/=lib/ds-token/lib/ds-stop/lib/ds-auth/src/",
        ":ds-math/=lib/ds-token/lib/ds-math/src/",
        ":ds-note/=lib/ds-token/lib/ds-stop/lib/ds-note/src/",
        ":ds-stop/=lib/ds-token/lib/ds-stop/src/",
        ":ds-test/=lib/ds-test/src/",
        ":ds-token/=lib/ds-token/src/",
        ":erc20/=lib/ds-token/lib/erc20/src/",
        ":forge-std/=lib/forge-std/src/",
        ":isolmate/=lib/isolmate/src/",
        ":prb-test/=lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/oracles/IBaseOracle.sol": "IBaseOracle"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/oracles/IBaseOracle.sol": {
        "keccak256": "0x4a2789a1a67321a889da96df45301657fef735850f77f3efeb5d2c8ef384a968",
        "urls": [
          "bzz-raw://cb955c6deb04a06055f6b26a5098e4405784d0a8fa46cbb70b48ed95a59de7f6",
          "dweb:/ipfs/QmSWH43Fez11igWdbdt4x43G8o17mA8AsuHy8kz3NFE9pn"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/oracles/IBaseOracle.sol",
    "id": 57187,
    "exportedSymbols": {
      "IBaseOracle": [57186]
    },
    "nodeType": "SourceUnit",
    "src": "36:803:109",
    "nodes": [
      {
        "id": 57162,
        "nodeType": "PragmaDirective",
        "src": "36:23:109",
        "nodes": [],
        "literals": ["solidity", "0.8", ".19"]
      },
      {
        "id": 57186,
        "nodeType": "ContractDefinition",
        "src": "217:621:109",
        "nodes": [
          {
            "id": 57165,
            "nodeType": "ErrorDefinition",
            "src": "263:25:109",
            "nodes": [],
            "errorSelector": "52cc3f7d",
            "name": "InvalidPriceFeed",
            "nameLocation": "269:16:109",
            "parameters": {
              "id": 57164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "285:2:109"
            }
          },
          {
            "id": 57171,
            "nodeType": "FunctionDefinition",
            "src": "375:64:109",
            "nodes": [],
            "documentation": {
              "id": 57166,
              "nodeType": "StructuredDocumentation",
              "src": "292:80:109",
              "text": " @notice Symbol of the quote: token / baseToken (e.g. 'ETH / USD')"
            },
            "functionSelector": "95d89b41",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "384:6:109",
            "parameters": {
              "id": 57167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "390:2:109"
            },
            "returnParameters": {
              "id": 57170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57169,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "430:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 57171,
                  "src": "416:21:109",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 57168,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "415:23:109"
            },
            "scope": 57186,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57179,
            "nodeType": "FunctionDefinition",
            "src": "575:89:109",
            "nodes": [],
            "documentation": {
              "id": 57172,
              "nodeType": "StructuredDocumentation",
              "src": "443:129:109",
              "text": " @notice Fetch the latest oracle result and whether it is valid or not\n @dev    This method should never revert"
            },
            "functionSelector": "4fd0ada8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getResultWithValidity",
            "nameLocation": "584:21:109",
            "parameters": {
              "id": 57173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "605:2:109"
            },
            "returnParameters": {
              "id": 57178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57175,
                  "mutability": "mutable",
                  "name": "_result",
                  "nameLocation": "639:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 57179,
                  "src": "631:15:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:7:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57177,
                  "mutability": "mutable",
                  "name": "_validity",
                  "nameLocation": "653:9:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 57179,
                  "src": "648:14:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 57176,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "630:33:109"
            },
            "scope": 57186,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57185,
            "nodeType": "FunctionDefinition",
            "src": "781:55:109",
            "nodes": [],
            "documentation": {
              "id": 57180,
              "nodeType": "StructuredDocumentation",
              "src": "668:110:109",
              "text": " @notice Fetch the latest oracle result\n @dev    Will revert if is the price feed is invalid"
            },
            "functionSelector": "57de26a4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "read",
            "nameLocation": "790:4:109",
            "parameters": {
              "id": 57181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "794:2:109"
            },
            "returnParameters": {
              "id": 57184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57183,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "828:6:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 57185,
                  "src": "820:14:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "819:16:109"
            },
            "scope": 57186,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IBaseOracle",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 57163,
          "nodeType": "StructuredDocumentation",
          "src": "61:155:109",
          "text": " @title IBaseOracle\n @notice Basic interface for a system price feed\n         All price feeds should be translated into an 18 decimals format"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [57186],
        "name": "IBaseOracle",
        "nameLocation": "227:11:109",
        "scope": 57187,
        "usedErrors": [57165]
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 109
}
